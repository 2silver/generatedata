version: "3"

networks:
  gd-network:
    driver: bridge

services:

#  webapp:
#    build:
#      context: ./client
#      dockerfile: Dockerfile.dev
#    expose:
#      - 9000
#    ports:
#      - 9000:9000
#    container_name: webapp
#    volumes:
#      - ./client:/home/app/generatedata/client
#      - /home/app/generatedata/client/node_modules
#    links:
#      - server
#    command: yarn webpackDev

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    depends_on:
      - db
    networks:
      - gd-network
    expose:
      - 3001
    ports:
      - 3001:3001
    restart: on-failure
    container_name: server
    volumes:
      - ./server:/home/app/generatedata/server
      - /home/app/generatedata/server/node_modules

  db:
    image: mariadb # TODO lock down version?
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - 3306
    ports:
      - 3306:3306
    networks:
      - gd-network
    environment:
#      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: rootpass357 # user: root
      MYSQL_DATABASE: generatedata
      MYSQL_ALLOW_EMPTY_PASSWORD: ok
#      MYSQL_USER: gduser
#      MYSQL_PASSWORD: gduser
    volumes:
      - ./server/db.sql:/docker-entrypoint-initdb.d/setup.sql
      - db_data:/var/lib/mysql/data

volumes:
  db_data: {}

# *** For prod only.
#    nginx:
#      image: nginx:latest
#      container_name: prod_nginx
#      depends_on:
#        - web
#      volumes:
#        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
#      ports:
#        - 80:80
#        - 443:443

    ## this may be useful
#    environment:
#      - PGUSER=postgres
#      - PGHOST=postgres
#      - PGDATABASE=postgres
#      - PGPASSWORD=
#      - PGPORT=5432
