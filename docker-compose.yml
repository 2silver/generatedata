version: "3"
services:

  # PROD:
  # 1. main generatedata code from npm package.
  # 2. custom FE code for website.


  # DEV:
  # 1. introduce webpack-dev-server. That'll expose a port. Now have `yarn start` do all that shit, plus boot up the dev server.
  # 2. once that's in place, have a separate container for the server. So requests to the server will be to a different port.
  # that should be it....

  webapp:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    expose:
      - "3000"
    ports:
      - 3000:3000
    container_name: webapp
    volumes:
      - ./client:/home/app/generatedata/client
      - /home/app/generatedata/client/node_modules

    nginx:
      image: nginx:latest
      container_name: production_nginx
      depends_on:
        - web
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      ports:
        - 80:80
#        - 443:443


#  server:
#    build:
#      context: ./server
#      dockerfile: Dockerfile.dev
#    ports:
#      - '3001:3001'
#    restart: on-failure
#    container_name: server
#    volumes:
#      - ./server:/home/app/generatedata/server
#      - /home/app/generatedata/server/node_modules

    ## this may be useful
#    environment:
#      - PGUSER=postgres
#      - PGHOST=postgres
#      - PGDATABASE=postgres
#      - PGPASSWORD=
#      - PGPORT=5432
