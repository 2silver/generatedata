{"code":"// Template definition\r\n// \tb :\tNATIONAL_BANK_CODE\r\n// \ti :\tBIC_CODE\r\n// \td :\tBRANCH_ID\r\n// \tc :\tACCOUNT_NUMBER\r\n// \tk :\tIBAN_CHECKSUM\r\n// \tx :\tNATIONAL_CHECKSUM\r\n// \tm :\tMOD11_CHECKSUM\r\n// \tt :\tACCOUNT_TYPE\r\n// \tp :\tPERSONAL_NUMBER\r\n// \tn :\tCOUNTRY_CODE\r\n//\r\n//  Based on http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\r\n//  Corrected using various sources\r\nvar countryCodes = [\r\n    { code: 'AL', sepa: false, template: 'ALkkbbbddddxcccccccccccccccc', name: 'Albania' },\r\n    { code: 'AD', sepa: false, template: 'ADkkbbbbddddcccccccccccc', name: 'Andorra' },\r\n    { code: 'AT', sepa: true, template: 'ATkkbbbbbccccccccccc', name: 'Austria' },\r\n    { code: 'AZ', sepa: false, template: 'AZkkbbbbcccccccccccccccccccc', name: 'Azerbaijan' },\r\n    { code: 'BE', sepa: true, template: 'BEkkbbbcccccccxx', name: 'Belgium' },\r\n    { code: 'BH', sepa: false, template: 'BHkkbbbbcccccccccccccc', name: 'Bahrain' },\r\n    { code: 'BA', sepa: false, template: 'BAkkbbbdddccccccccxx', name: 'Bosnia and Herzegovina' },\r\n    { code: 'BG', sepa: true, template: 'BGkkiiiiddddttcccccccc', name: 'Bulgaria' },\r\n    { code: 'CR', sepa: false, template: 'CRkkbbbcccccccccccccc', name: 'Costa Rica' },\r\n    { code: 'HR', sepa: false, template: 'HRkkbbbbbbbcccccccccc', name: 'Croatia' },\r\n    { code: 'CY', sepa: true, template: 'CYkkbbbdddddcccccccccccccccc', name: 'Cyprus' },\r\n    { code: 'CZ', sepa: true, template: 'CZkkbbbbddddddcccccccccc', name: 'Czech Republic' },\r\n    { code: 'DK', sepa: true, template: 'DKkkbbbbcccccccccc', name: 'Denmark' },\r\n    { code: 'DO', sepa: false, template: 'DOkkbbbbcccccccccccccccccccc', name: 'Dominican Republic' },\r\n    { code: 'EE', sepa: true, template: 'EEkkbbddcccccccccccx', name: 'Estonia' },\r\n    { code: 'FO', sepa: false, template: 'FOkkbbbbcccccccccx', name: 'Faroe Islands' },\r\n    { code: 'FI', sepa: true, template: 'FIkkbbbbbbcccccccx', name: 'Finland' },\r\n    { code: 'FR', sepa: true, template: 'FRkkbbbbbdddddcccccccccccxx', name: 'France' },\r\n    { code: 'GE', sepa: false, template: 'GEkkbbcccccccccccccccc', name: 'Georgia' },\r\n    { code: 'DE', sepa: true, template: 'DEkkbbbbbbbbcccccccccc', name: 'Germany' },\r\n    { code: 'GI', sepa: false, template: 'GIkkiiiiccccccccccccccc', name: 'Gibraltar' },\r\n    { code: 'GR', sepa: true, template: 'GRkkbbbddddcccccccccccccccc', name: 'Greece' },\r\n    { code: 'GL', sepa: false, template: 'GLkkbbbbcccccccccc', name: 'Greenland' },\r\n    { code: 'GT', sepa: false, template: 'GTkkbbbbcccccccccccccccccccc', name: 'Guatemala' },\r\n    { code: 'HU', sepa: true, template: 'HUkkbbbddddxcccccccccccccccx', name: 'Hungary' },\r\n    { code: 'IS', sepa: true, template: 'ISkkbbbbddccccccpppppppppp', name: 'Iceland' },\r\n    { code: 'IE', sepa: true, template: 'IEkkiiiibbbbbbcccccccc', name: 'Ireland' },\r\n    { code: 'IL', sepa: false, template: 'ILkkbbbnnnccccccccccccc', name: 'Israel' },\r\n    { code: 'IT', sepa: true, template: 'ITkkxiiiiibbbbbcccccccccccc', name: 'Italy' },\r\n    { code: 'KZ', sepa: false, template: 'KZkkbbbccccccccccccc', name: 'Kazakhstan' },\r\n    { code: 'KW', sepa: false, template: 'KWkkbbbbcccccccccccccccccccccc', name: 'Kuwait' },\r\n    { code: 'LV', sepa: true, template: 'LVkkiiiiccccccccccccc', name: 'Latvia' },\r\n    { code: 'LB', sepa: false, template: 'LBkkbbbbcccccccccccccccccccc', name: 'Lebanon' },\r\n    { code: 'LI', sepa: true, template: 'LIkkbbbbbcccccccccccc', name: 'Liechtenstein' },\r\n    { code: 'LT', sepa: true, template: 'LTkkbbbbbccccccccccc', name: 'Lithuania' },\r\n    { code: 'LU', sepa: true, template: 'LUkkbbbccccccccccccc', name: 'Luxembourg' },\r\n    { code: 'MK', sepa: false, template: 'MKkkbbbccccccccccxx', name: 'Macedonia' },\r\n    { code: 'MT', sepa: true, template: 'MTkkiiiidddddcccccccccccccccccc', name: 'Malta' },\r\n    { code: 'MR', sepa: false, template: 'MRkkbbbbbdddddcccccccccccxx', name: 'Mauritania' },\r\n    { code: 'MU', sepa: false, template: 'MUkkbbbbbbddcccccccccccccccccc', name: 'Mauritius' },\r\n    { code: 'MC', sepa: true, template: 'MCkkbbbbbdddddcccccccccccxx', name: 'Monaco' },\r\n    { code: 'MD', sepa: false, template: 'MDkkbbcccccccccccccccccc', name: 'Moldova' },\r\n    { code: 'ME', sepa: false, template: 'MEkkbbbcccccccccccccxx', name: 'Montenegro' },\r\n    { code: 'NL', sepa: true, template: 'NLkkiiiicccccccccc', name: 'Netherlands' },\r\n    { code: 'NO', sepa: true, template: 'NOkkbbbbccccccx', name: 'Norway' },\r\n    { code: 'PK', sepa: false, template: 'PKkkbbbbcccccccccccccccc', name: 'Pakistan' },\r\n    { code: 'PS', sepa: false, template: 'PSkkbbbbxxxxxxxxxcccccccccccc', name: 'Palestinian Territory, Occupied' },\r\n    { code: 'PL', sepa: true, template: 'PLkkbbbddddxcccccccccccccccc', name: 'Poland' },\r\n    { code: 'PT', sepa: true, template: 'PTkkbbbbddddcccccccccccxx', name: 'Portugal' },\r\n    { code: 'RO', sepa: true, template: 'ROkkiiiicccccccccccccccc', name: 'Romania' },\r\n    { code: 'SM', sepa: false, template: 'SMkkxbbbbbdddddcccccccccccc', name: 'San Marino' },\r\n    { code: 'SA', sepa: false, template: 'SAkkbbcccccccccccccccccc', name: 'Saudi Arabia' },\r\n    { code: 'RS', sepa: false, template: 'RSkkbbbcccccccccccccxx', name: 'Serbia' },\r\n    { code: 'SK', sepa: true, template: 'SKkkbbbbddddddcccccccccc', name: 'Slovakia' },\r\n    { code: 'SI', sepa: true, template: 'SIkkbbdddccccccccxx', name: 'Slovenia' },\r\n    { code: 'ES', sepa: true, template: 'ESkkbbbbddddxxcccccccccc', name: 'Spain' },\r\n    { code: 'SE', sepa: true, template: 'SEkkbbbccccccccccccccccx', name: 'Sweden' },\r\n    { code: 'CH', sepa: true, template: 'CHkkbbbbbcccccccccccc', name: 'Switzerland' },\r\n    { code: 'TN', sepa: false, template: 'TNkkbbdddccccccccccccccc', name: 'Tunisia' },\r\n    { code: 'TR', sepa: false, template: 'TRkkbbbbbxcccccccccccccccc', name: 'Turkey' },\r\n    { code: 'AE', sepa: false, template: 'AEkkbbbcccccccccccccccc', name: 'United Arab Emirates' },\r\n    { code: 'GB', sepa: true, template: 'GBkkiiiiddddddcccccccc', name: 'United Kingdom' },\r\n    { code: 'VG', sepa: false, template: 'VGkkbbbbcccccccccccccccc', name: 'Virgin Islands, British' }\r\n];\r\nexport var generate = function () {\r\n    var countryCode = utils.randomUtils.getRandomArrayValue(countryCodes);\r\n    var iban = fillTemplate(countryCode.template, countryCode.code);\r\n    return { display: iban };\r\n};\r\nvar generateBic = function (countryCode) {\r\n    var withBranchCode = utils.randomUtils.getRandomBool();\r\n    var branchCode = withBranchCode ? 'xxX' : '';\r\n    var format = \"LLLL\" + countryCode + \"LL\" + branchCode;\r\n    return utils.randomUtils.generateRandomAlphanumericStr(format);\r\n};\r\nvar fillTemplate = function (template, countryCode) {\r\n    var bic = generateBic(countryCode);\r\n    var bicPos = 0;\r\n    var unsigned = '';\r\n    var uppercaseTemplate = template.toUpperCase();\r\n    for (var i = 0; i < template.length; i++) {\r\n        var c = template[i];\r\n        if (uppercaseTemplate[i] === c) {\r\n            unsigned += c;\r\n            continue;\r\n        }\r\n        if (c === 'i') {\r\n            unsigned += bic[bicPos++];\r\n            continue;\r\n        }\r\n        if (c === 'k') {\r\n            unsigned += '_';\r\n            continue;\r\n        }\r\n        unsigned += utils.randomUtils.generateRandomAlphanumericStr('x');\r\n    }\r\n    return recalculateChecksum(unsigned);\r\n};\r\n// removes the current checksum digit from an IBAN string, and replaces it with what it should have been\r\nvar recalculateChecksum = function (ibanString) {\r\n    if (ibanString.length < 6) {\r\n        return ibanString;\r\n    }\r\n    var reordered = ibanString.substring(4) + ibanString.substring(0, 2);\r\n    var numerical = '';\r\n    var reorderedLength = reordered.length;\r\n    for (var i = 0; i < reorderedLength; i++) {\r\n        numerical += chr2Int(reordered[i]);\r\n    }\r\n    numerical += '00';\r\n    var checksum = 98 - bigMod(numerical, 97);\r\n    return ibanString.substring(0, 2) + checksum.toString().padStart(2, '0') + ibanString.substring(4);\r\n};\r\nvar bigMod = function (x, y) {\r\n    // how many numbers to take at once? careful not to exceed (int)\r\n    var take = 5;\r\n    var mod = '';\r\n    while (x.length > 0) {\r\n        var a = parseInt(mod + x.substring(0, take));\r\n        x = x.substring(take);\r\n        mod = (a % y).toString();\r\n    }\r\n    return parseInt(mod, 10);\r\n};\r\nvar chr2Int = function (chr) {\r\n    var ord = getOrd(chr);\r\n    if (ord <= 57 && ord >= 48) { //48 = '0', 57 = '9'\r\n        return ord - 48;\r\n    }\r\n    if (ord <= 90 && ord >= 65) { //90 = 'Z', 65 = 'A'\r\n        return 10 + (ord - 65);\r\n    }\r\n    // throw new Exception(\"Input character {$chr}({$ord}) does not map to an integer\");\r\n    return 0;\r\n};\r\nvar getOrd = function (str) { return str.charCodeAt(0); };\r\nvar utilsLoaded = false;\r\nvar onmessage = function (e) {\r\n    if (!utilsLoaded) {\r\n        importScripts(e.data.workerResources.workerUtils);\r\n        utilsLoaded = true;\r\n    }\r\n    postMessage(generate());\r\n};\r\n//# sourceMappingURL=IBAN.generator.js.map","references":["/Users/benkeen/generatedata/client/types/dataTypes.d.ts"],"map":"{\"version\":3,\"file\":\"IBAN.generator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/plugins/dataTypes/IBAN/IBAN.generator.ts\"],\"names\":[],\"mappings\":\"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\"}"}
