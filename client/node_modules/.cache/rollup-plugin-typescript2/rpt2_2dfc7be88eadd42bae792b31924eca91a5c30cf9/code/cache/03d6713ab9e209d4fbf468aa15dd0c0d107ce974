{"code":"// const sharpDateFormats = {\r\n//     \"m/d/Y\": \"MM/dd/yyyy\",\r\n//     \"d/m/Y\": \"dd/MM/yyyy\",\r\n//     \"m.d.y\": \"MM.dd.yy\",\r\n//     \"d.m.y\": \"dd.MM.yy\",\r\n//     \"d-m-y\": \"dd-MM-yy\",\r\n//     \"m-d-y\": \"MM-dd-yy\",\r\n//     \"d.m.Y\": \"dd.MM.yyyy\"\r\n// };\r\nexport var generateCSharp = function (data, stripWhitespace) {\r\n    var newline = (stripWhitespace) ? '' : '\\n';\r\n    var tab = (stripWhitespace) ? '' : '\\t';\r\n    var content = '';\r\n    if (data.isFirstBatch) {\r\n        content += \"var data = new [] {\" + newline;\r\n    }\r\n    data.rows.forEach(function (row, rowIndex) {\r\n        content += tab + \"new {\" + newline + tab + tab;\r\n        var pairs = [];\r\n        data.columns.forEach(function (_a, colIndex) {\r\n            var title = _a.title;\r\n            var currValue = row[colIndex];\r\n            pairs.push(title + \" = \\\"\" + currValue + \"\\\"\");\r\n            // \t\tif (isNumeric(currValue) || isBoolean(currValue)) {\r\n            // \t\t    pairs.push(`${propName} = ${data.rowData[i][j]}`);\r\n            // \t\t// } else if (sharpDateFormats[dateFormats[j]])) {\r\n            // \t\t//     pairs.push(`{$propName} = DateTime.ParseExact(\\\"{$data[\"rowData\"][$i][$j]}\\\", \\\"{$this->sharpDateFormats[$this->dateFormats[$j]]}\\\", CultureInfo.InvariantCulture)`);\r\n            // \t\t} else {\r\n            // \t\t    pairs.push(`${propName} = \"${data.rowData[i][j]}\"`);\r\n        });\r\n        content += pairs.join(\",\" + newline + tab + tab);\r\n        if (data.isLastBatch && rowIndex === data.rows.length - 1) {\r\n            content += \"\" + newline + tab + \"}\" + newline + \"};\";\r\n        }\r\n        else {\r\n            content += \"\" + newline + tab + \"},\" + newline;\r\n        }\r\n    });\r\n    return content;\r\n};\r\n//# sourceMappingURL=CSharp.js.map","references":["/Users/benkeen/generatedata/client/src/utils/generalUtils.ts","/Users/benkeen/generatedata/client/src/utils/numberUtils.ts","/Users/benkeen/generatedata/client/types/exportTypes.d.ts"],"map":"{\"version\":3,\"file\":\"CSharp.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/plugins/exportTypes/ProgrammingLanguage/languages/CSharp.ts\"],\"names\":[],\"mappings\":\"AAIA,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,4BAA4B;AAC5B,KAAK;AAEL,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,IAAmB,EAAE,eAAwB;IAC3E,IAAM,OAAO,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9C,IAAM,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAE1C,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,IAAI,CAAC,YAAY,EAAE;QACtB,OAAO,IAAI,wBAAsB,OAAS,CAAC;KAC3C;IAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAQ,EAAE,QAAgB;QAC5C,OAAO,IAAO,GAAG,aAAQ,OAAO,GAAG,GAAG,GAAG,GAAK,CAAC;QAC/C,IAAM,KAAK,GAAa,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,EAAS,EAAE,QAAQ;gBAAjB,KAAK,WAAA;YAC5B,IAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAK,CAAC,IAAI,CAAI,KAAK,aAAO,SAAS,OAAG,CAAC,CAAC;YAExC,wDAAwD;YACxD,2DAA2D;YAC3D,uDAAuD;YACvD,iLAAiL;YACjL,aAAa;YACb,6DAA6D;QAE9D,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,MAAI,OAAO,GAAG,GAAG,GAAG,GAAK,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,WAAW,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,EAAE;YACxD,OAAO,IAAI,KAAG,OAAO,GAAG,GAAG,SAAI,OAAO,OAAI,CAAC;SAC3C;aAAM;YACN,OAAO,IAAI,KAAG,OAAO,GAAG,GAAG,UAAK,OAAS,CAAC;SAC1C;IACF,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC\"}"}
