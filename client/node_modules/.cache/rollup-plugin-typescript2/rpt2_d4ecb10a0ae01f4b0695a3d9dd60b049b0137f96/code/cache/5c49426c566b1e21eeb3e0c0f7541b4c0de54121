{"code":"import { __assign } from \"tslib\";\r\nvar workerUtilsLoaded = false;\r\nvar onmessage = function (e) {\r\n    if (!workerUtilsLoaded) {\r\n        importScripts(e.data.workerResources.workerUtils);\r\n        workerUtilsLoaded = true;\r\n    }\r\n    postMessage(generate(e.data));\r\n};\r\nexport var generate = function (data) {\r\n    var rowState = data.rowState, countryData = data.countryData, existingRowData = data.existingRowData;\r\n    var source = rowState.source, selectedCountries = rowState.selectedCountries;\r\n    var countryList = utils.countryUtils.getCountryList();\r\n    var country;\r\n    var regionRow;\r\n    if (source === 'any') {\r\n        country = utils.randomUtils.getRandomArrayValue(countryList);\r\n    }\r\n    else if (source === 'countries') {\r\n        var list = selectedCountries.length ? selectedCountries : countryList;\r\n        country = utils.randomUtils.getRandomArrayValue(list);\r\n    }\r\n    else if (source === 'countryRow') {\r\n        var countryRow = existingRowData.find(function (_a) {\r\n            var id = _a.id;\r\n            return id === rowState.targetRowId;\r\n        });\r\n        country = countryRow.data.countryDataType;\r\n    }\r\n    else {\r\n        regionRow = existingRowData.find(function (_a) {\r\n            var id = _a.id;\r\n            return id === rowState.targetRowId;\r\n        });\r\n        country = regionRow.data.countryDataType;\r\n    }\r\n    var selectedCountry = countryData[country];\r\n    var selectedRegion;\r\n    if (regionRow) {\r\n        selectedRegion = selectedCountry.regions.find(function (i) { return i.regionName === regionRow.data.display; });\r\n    }\r\n    else {\r\n        selectedRegion = utils.randomUtils.getRandomArrayValue(selectedCountry.regions);\r\n    }\r\n    return {\r\n        display: getRegionPostalCode(selectedCountry, selectedRegion)\r\n    };\r\n};\r\nvar getRegionPostalCode = function (countryData, region) {\r\n    var placeholders = {};\r\n    var format = countryData.extendedData.zipFormat.format;\r\n    if (countryData.extendedData.zipFormat.replacements) {\r\n        placeholders = countryData.extendedData.zipFormat.replacements;\r\n    }\r\n    if (region.extendedData) {\r\n        if (region.extendedData.zipFormat) {\r\n            if (region.extendedData.zipFormat.format) {\r\n                format = region.extendedData.zipFormat.format;\r\n            }\r\n            if (region.extendedData.zipFormat.replacements) {\r\n                placeholders = __assign(__assign({}, placeholders), region.extendedData.zipFormat.replacements);\r\n            }\r\n        }\r\n    }\r\n    var formats = format.split('|');\r\n    var selectedFormat = utils.randomUtils.getRandomArrayValue(formats);\r\n    return utils.randomUtils.generatePlaceholderStr(selectedFormat, placeholders);\r\n};\r\n//# sourceMappingURL=PostalZip.generator.js.map","references":["/Users/benkeen/generatedata/client/types/dataTypes.d.ts","/Users/benkeen/generatedata/client/types/countries.d.ts"],"map":"{\"version\":3,\"file\":\"PostalZip.generator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/plugins/dataTypes/PostalZip/PostalZip.generator.ts\"],\"names\":[],\"mappings\":\"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\"}"}
