{"code":"var context = self;\r\nvar workerUtilsLoaded = false;\r\ncontext.onmessage = function (e) {\r\n    if (!workerUtilsLoaded) {\r\n        importScripts(e.data.workerResources.workerUtils);\r\n        workerUtilsLoaded = true;\r\n    }\r\n    var settings = e.data.settings;\r\n    var content = '';\r\n    if (settings.databaseType === 'MySQL') {\r\n        content = generateMySQL(e.data);\r\n    }\r\n    else if (settings.databaseType === 'Postgres') {\r\n        content = generatePostgres(e.data);\r\n    }\r\n    else if (settings.databaseType === 'SQLite') {\r\n        content = generateSQLite(e.data);\r\n    }\r\n    else if (settings.databaseType === 'Oracle') {\r\n        content = generateOracle(e.data);\r\n    }\r\n    else if (settings.databaseType === 'MSSQL') {\r\n        content = generateMSSQL(e.data);\r\n    }\r\n    context.postMessage(content);\r\n};\r\nvar getWrappedValue = function (value, colIndex, numericFieldIndexes) {\r\n    var val = '';\r\n    if (numericFieldIndexes.indexOf(colIndex) !== -1) {\r\n        val = value;\r\n    }\r\n    else {\r\n        val = \"\\\"\" + value + \"\\\"\";\r\n    }\r\n    return val;\r\n};\r\nexport var generateMySQL = function (data) {\r\n    var sqlSettings = data.settings;\r\n    var isFirstBatch = data.isFirstBatch, columns = data.columns, rows = data.rows;\r\n    var backquote = sqlSettings.encloseInBackQuotes ? '`' : '';\r\n    var colTitles = columns.map(function (_a) {\r\n        var title = _a.title;\r\n        return title;\r\n    });\r\n    var content = '';\r\n    var numericFieldIndexes = utils.generationUtils.getNumericFieldColumnIndexes(data);\r\n    if (isFirstBatch) {\r\n        if (sqlSettings.dropTable) {\r\n            content += \"DROP TABLE IF EXISTS \" + backquote + sqlSettings.tableName + backquote + \";\\n\\n\";\r\n        }\r\n        if (sqlSettings.createTable) {\r\n            content += \"CREATE TABLE \" + backquote + sqlSettings.tableName + backquote + \" (\\n\";\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \"  \" + backquote + \"id\" + backquote + \" mediumint(8) unsigned NOT NULL auto_increment,\\n\";\r\n            }\r\n            var cols_1 = [];\r\n            columns.forEach(function (_a) {\r\n                var title = _a.title, dataType = _a.dataType, metadata = _a.metadata;\r\n                var columnTypeInfo = 'MEDIUMTEXT';\r\n                if (metadata && metadata.sql) {\r\n                    if (metadata.sql.field_MySQL) {\r\n                        columnTypeInfo = metadata.sql.field_MySQL;\r\n                    }\r\n                    else if (metadata.sql.field) {\r\n                        columnTypeInfo = metadata.sql.field;\r\n                    }\r\n                }\r\n                cols_1.push(\"  \" + backquote + title + backquote + \" \" + columnTypeInfo);\r\n            });\r\n            content += cols_1.join(',\\n');\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \",\\n  PRIMARY KEY (\" + backquote + \"id\" + backquote + \")\\n) AUTO_INCREMENT=1;\\n\\n\";\r\n            }\r\n            else {\r\n                content += \"\\n);\\n\\n\";\r\n            }\r\n        }\r\n    }\r\n    var colNamesStr = '';\r\n    if (sqlSettings.encloseInBackQuotes) {\r\n        colNamesStr = \"`\" + colTitles.join('`,`') + \"`\";\r\n    }\r\n    else {\r\n        colNamesStr = colTitles.join(',');\r\n    }\r\n    var rowDataStr = [];\r\n    rows.forEach(function (row, rowIndex) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            var displayVals_1 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_1.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            rowDataStr.push(displayVals_1.join(','));\r\n            if (rowDataStr.length === sqlSettings.insertBatchSize) {\r\n                content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n                rowDataStr = [];\r\n            }\r\n        }\r\n        else if (sqlSettings.statementType === 'insertIgnore') {\r\n            var displayVals_2 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_2.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            rowDataStr.push(displayVals_2.join(','));\r\n            if (rowDataStr.length === sqlSettings.insertBatchSize) {\r\n                content += \"INSERT IGNORE INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n                rowDataStr = [];\r\n            }\r\n        }\r\n        else {\r\n            var pairs_1 = [];\r\n            colTitles.forEach(function (title, colIndex) {\r\n                var colValue = getWrappedValue(row[colIndex], colIndex, numericFieldIndexes);\r\n                pairs_1.push(\"\" + backquote + title + backquote + \" = \" + colValue);\r\n            });\r\n            var pairsStr = pairs_1.join(', ');\r\n            content += \"UPDATE \" + backquote + sqlSettings.tableName + backquote + \" SET \" + pairsStr + \" WHERE \" + backquote + \"id\" + backquote + \" = \" + (rowIndex + 1) + \";\\n\";\r\n        }\r\n    });\r\n    if (rowDataStr.length) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n        }\r\n        else if (sqlSettings.statementType === 'insertIgnore') {\r\n            content += \"INSERT IGNORE INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n        }\r\n    }\r\n    return content;\r\n};\r\nexport var generatePostgres = function (generationData) {\r\n    var sqlSettings = generationData.settings;\r\n    var colTitles = generationData.columns.map(function (_a) {\r\n        var title = _a.title;\r\n        return title;\r\n    });\r\n    var content = '';\r\n    var numericFieldIndexes = utils.generationUtils.getNumericFieldColumnIndexes(generationData);\r\n    if (generationData.isFirstBatch) {\r\n        if (sqlSettings.dropTable) {\r\n            content += \"DROP TABLE IF EXISTS \\\"\" + sqlSettings.tableName + \"\\\";\\n\\n\";\r\n        }\r\n        if (sqlSettings.createTable) {\r\n            content += \"CREATE TABLE \\\"\" + sqlSettings.tableName + \"\\\" (\\n\";\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \"  id SERIAL PRIMARY KEY,\\n\";\r\n            }\r\n            var cols_2 = [];\r\n            generationData.columns.forEach(function (_a) {\r\n                var title = _a.title, dataType = _a.dataType, metadata = _a.metadata;\r\n                var columnTypeInfo = 'MEDIUMTEXT';\r\n                if (metadata) {\r\n                    if (metadata.field_Postgres) {\r\n                        columnTypeInfo = metadata.field_Postgres;\r\n                    }\r\n                    else if (metadata.field) {\r\n                        columnTypeInfo = metadata.field;\r\n                    }\r\n                }\r\n                cols_2.push(\"  \" + title + \" \" + columnTypeInfo);\r\n            });\r\n            content += cols_2.join(',\\n');\r\n            content += \"\\n);\\n\\n\";\r\n        }\r\n    }\r\n    var colNamesStr = colTitles.join(',');\r\n    var rowDataStr = [];\r\n    generationData.rows.forEach(function (row, rowIndex) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            var displayVals_3 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_3.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            rowDataStr.push(displayVals_3.join(','));\r\n            if (rowDataStr.length === sqlSettings.insertBatchSize) {\r\n                content += \"INSERT INTO \" + sqlSettings.tableName + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n                rowDataStr = [];\r\n            }\r\n        }\r\n        else {\r\n            var pairs_2 = [];\r\n            colTitles.forEach(function (title, colIndex) {\r\n                var colValue = getWrappedValue(row[colIndex], colIndex, numericFieldIndexes);\r\n                pairs_2.push(title + \" = \" + colValue);\r\n            });\r\n            var pairsStr = pairs_2.join(', ');\r\n            content += \"UPDATE \" + sqlSettings.tableName + \" SET \" + pairsStr + \" WHERE id = \" + (rowIndex + 1) + \";\\n\";\r\n        }\r\n    });\r\n    if (rowDataStr.length && sqlSettings.statementType === 'insert') {\r\n        content += \"INSERT INTO \" + sqlSettings.tableName + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n    }\r\n    return content;\r\n};\r\nexport var generateSQLite = function (generationData) {\r\n    var sqlSettings = generationData.settings;\r\n    var backquote = sqlSettings.encloseInBackQuotes ? '`' : '';\r\n    var colTitles = generationData.columns.map(function (_a) {\r\n        var title = _a.title;\r\n        return title;\r\n    });\r\n    var content = '';\r\n    var numericFieldIndexes = utils.generationUtils.getNumericFieldColumnIndexes(generationData);\r\n    if (generationData.isFirstBatch) {\r\n        if (sqlSettings.dropTable) {\r\n            content += \"DROP TABLE \" + backquote + sqlSettings.tableName + backquote + \";\\n\\n\";\r\n        }\r\n        if (sqlSettings.createTable) {\r\n            content += \"CREATE TABLE \" + backquote + sqlSettings.tableName + backquote + \" (\\n\";\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \"  \" + backquote + \"id\" + backquote + \" number primary key,\\n\";\r\n            }\r\n            var cols_3 = [];\r\n            generationData.columns.forEach(function (_a) {\r\n                var title = _a.title, dataType = _a.dataType, metadata = _a.metadata;\r\n                var columnTypeInfo = 'MEDIUMTEXT';\r\n                // figure out the content type. Default to MEDIUMTEXT, then use the specific SQLField_MySQL, then the SQLField\r\n                if (metadata && metadata.sql) {\r\n                    if (metadata.sql.field_SQLite) {\r\n                        columnTypeInfo = metadata.sql.field_SQLite;\r\n                    }\r\n                    else if (metadata.sql.field) {\r\n                        columnTypeInfo = metadata.sql.field;\r\n                    }\r\n                }\r\n                cols_3.push(\"  \" + backquote + title + backquote + \" \" + columnTypeInfo);\r\n            });\r\n            content += cols_3.join(',\\n');\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \",\\n  PRIMARY KEY (\" + backquote + \"id\" + backquote + \")\\n) AUTO_INCREMENT=1;\\n\\n\";\r\n            }\r\n            else {\r\n                content += \"\\n);\\n\\n\";\r\n            }\r\n        }\r\n    }\r\n    var colNamesStr = '';\r\n    if (sqlSettings.encloseInBackQuotes) {\r\n        colNamesStr = \"`\" + colTitles.join('`,`') + \"`\";\r\n    }\r\n    else {\r\n        colNamesStr = colTitles.join(',');\r\n    }\r\n    var rowDataStr = [];\r\n    generationData.rows.forEach(function (row, rowIndex) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            var displayVals_4 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_4.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            rowDataStr.push(displayVals_4.join(','));\r\n            if (rowDataStr.length === sqlSettings.insertBatchSize) {\r\n                content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n                rowDataStr = [];\r\n            }\r\n        }\r\n        else {\r\n            var pairs_3 = [];\r\n            colTitles.forEach(function (title, colIndex) {\r\n                var colValue = getWrappedValue(row[colIndex], colIndex, numericFieldIndexes);\r\n                pairs_3.push(\"\" + backquote + title + backquote + \" = \" + colValue);\r\n            });\r\n            var pairsStr = pairs_3.join(', ');\r\n            content += \"UPDATE \" + backquote + sqlSettings.tableName + backquote + \" SET \" + pairsStr + \" WHERE \" + backquote + \"id\" + backquote + \" = \" + (rowIndex + 1) + \";\\n\";\r\n        }\r\n    });\r\n    if (rowDataStr.length && sqlSettings.statementType === 'insert') {\r\n        content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n    }\r\n    return content;\r\n};\r\nexport var generateOracle = function (generationData) {\r\n    var sqlSettings = generationData.settings;\r\n    var backquote = sqlSettings.encloseInBackQuotes ? '`' : '';\r\n    var colTitles = generationData.columns.map(function (_a) {\r\n        var title = _a.title;\r\n        return title;\r\n    });\r\n    var content = '';\r\n    var numericFieldIndexes = utils.generationUtils.getNumericFieldColumnIndexes(generationData);\r\n    if (generationData.isFirstBatch) {\r\n        if (sqlSettings.dropTable) {\r\n            content += \"DROP TABLE \" + backquote + sqlSettings.tableName + backquote + \";\\n\\n\";\r\n        }\r\n        if (sqlSettings.createTable) {\r\n            content += \"CREATE TABLE \" + backquote + sqlSettings.tableName + backquote + \" (\\n\";\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \"  \" + backquote + \"id\" + backquote + \" number primary key,\\n\";\r\n            }\r\n            var cols_4 = [];\r\n            generationData.columns.forEach(function (_a) {\r\n                var title = _a.title, dataType = _a.dataType, metadata = _a.metadata;\r\n                var columnTypeInfo = 'MEDIUMTEXT';\r\n                if (metadata && metadata.sql) {\r\n                    if (metadata.sql.field_Oracle) {\r\n                        columnTypeInfo = metadata.sql.field_Oracle;\r\n                    }\r\n                    else if (metadata.sql.field) {\r\n                        columnTypeInfo = metadata.sql.field;\r\n                    }\r\n                }\r\n                cols_4.push(\"  \" + backquote + title + backquote + \" \" + columnTypeInfo);\r\n            });\r\n            content += cols_4.join(',\\n');\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \",\\n  PRIMARY KEY (\" + backquote + \"id\" + backquote + \")\\n) AUTO_INCREMENT=1;\\n\\n\";\r\n            }\r\n            else {\r\n                content += \"\\n);\\n\\n\";\r\n            }\r\n        }\r\n    }\r\n    var colNamesStr = '';\r\n    if (sqlSettings.encloseInBackQuotes) {\r\n        colNamesStr = \"`\" + colTitles.join('`,`') + \"`\";\r\n    }\r\n    else {\r\n        colNamesStr = colTitles.join(',');\r\n    }\r\n    var rowDataStr = [];\r\n    generationData.rows.forEach(function (row, rowIndex) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            var displayVals_5 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_5.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            var rowDataStr_1 = displayVals_5.join(',');\r\n            content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES (\" + rowDataStr_1 + \");\\n\";\r\n        }\r\n        else {\r\n            var pairs_4 = [];\r\n            colTitles.forEach(function (title, colIndex) {\r\n                var colValue = getWrappedValue(row[colIndex], colIndex, numericFieldIndexes);\r\n                pairs_4.push(\"\" + backquote + title + backquote + \" = \" + colValue);\r\n            });\r\n            var pairsStr = pairs_4.join(', ');\r\n            content += \"UPDATE \" + backquote + sqlSettings.tableName + backquote + \" SET \" + pairsStr + \" WHERE \" + backquote + \"id\" + backquote + \" = \" + (rowIndex + 1) + \";\\n\";\r\n        }\r\n    });\r\n    if (rowDataStr.length && sqlSettings.statementType === 'insert') {\r\n        content += \"INSERT INTO \" + backquote + sqlSettings.tableName + backquote + \" (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n    }\r\n    return content;\r\n};\r\nexport var generateMSSQL = function (generationData) {\r\n    var sqlSettings = generationData.settings;\r\n    var colTitles = generationData.columns.map(function (_a) {\r\n        var title = _a.title;\r\n        return title;\r\n    });\r\n    var content = '';\r\n    var numericFieldIndexes = utils.generationUtils.getNumericFieldColumnIndexes(generationData);\r\n    if (generationData.isFirstBatch) {\r\n        if (sqlSettings.dropTable) {\r\n            content += \"IF EXISTS(SELECT 1 FROM sys.tables WHERE object_id = OBJECT_ID('\" + sqlSettings.tableName + \"'))\\n\";\r\n            content += \"BEGIN;\\n\";\r\n            content += \"    DROP TABLE [\" + sqlSettings.tableName + \"];\\n\";\r\n            content += \"END;\\n\";\r\n            content += \"GO\\n\\n\";\r\n        }\r\n        if (sqlSettings.createTable) {\r\n            content += \"CREATE TABLE [\" + sqlSettings.tableName + \"] (\\n\";\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \"    [\" + sqlSettings.tableName + \"ID] INTEGER NOT NULL IDENTITY(1, 1),\\n\";\r\n            }\r\n            var cols_5 = [];\r\n            generationData.columns.forEach(function (_a) {\r\n                var title = _a.title, dataType = _a.dataType, metadata = _a.metadata;\r\n                var columnTypeInfo = 'MEDIUMTEXT';\r\n                if (metadata && metadata.sql) {\r\n                    if (metadata.sql.field_MSSQL) {\r\n                        columnTypeInfo = metadata.sql.field_MSSQL;\r\n                    }\r\n                    else if (metadata.sql.field) {\r\n                        columnTypeInfo = metadata.sql.field;\r\n                    }\r\n                }\r\n                cols_5.push(\"    [\" + title + \"] \" + columnTypeInfo);\r\n            });\r\n            content += cols_5.join(',\\n');\r\n            if (sqlSettings.addPrimaryKey) {\r\n                content += \",\\n    PRIMARY KEY ([\" + sqlSettings.tableName + \"ID])\\n);\\nGO\\n\\n\";\r\n            }\r\n            else {\r\n                content += \"\\n);\\nGO\\n\\n\";\r\n            }\r\n        }\r\n    }\r\n    var colNamesStr = colTitles.join(',');\r\n    var rowDataStr = [];\r\n    generationData.rows.forEach(function (row, rowIndex) {\r\n        if (sqlSettings.statementType === 'insert') {\r\n            var displayVals_6 = [];\r\n            colTitles.forEach(function (columnTitle, colIndex) {\r\n                displayVals_6.push(getWrappedValue(row[colIndex], colIndex, numericFieldIndexes));\r\n            });\r\n            rowDataStr.push(displayVals_6.join(','));\r\n            if (rowDataStr.length === sqlSettings.insertBatchSize) {\r\n                content += \"INSERT INTO [\" + sqlSettings.tableName + \"] (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n                rowDataStr = [];\r\n            }\r\n            // TODO - need the current row\r\n            // if (($currentRow % 1000) == 0) {\r\n            // \t$content .= $endLineChar;\r\n            // \t$content .= \"PRINT 'Row {$currentRow} inserted';$endLineChar\";\r\n            // \t$content .= \"GO\";\r\n            // \t$content .= $endLineChar;\r\n            // }\r\n        }\r\n        else {\r\n            var pairs_5 = [];\r\n            colTitles.forEach(function (title, colIndex) {\r\n                var colValue = getWrappedValue(row[colIndex], colIndex, numericFieldIndexes);\r\n                pairs_5.push(\"[\" + title + \"] = \" + colValue);\r\n            });\r\n            var pairsStr = pairs_5.join(', ');\r\n            content += \"UPDATE [\" + sqlSettings.tableName + \"] SET \" + pairsStr + \" WHERE [{$this->tableName}ID] = \" + (rowIndex + 1) + \";\\n\";\r\n            // if (($currentRow % 1000) == 0) {\r\n            // \t$content .= $endLineChar;\r\n            // \t$content .= \"PRINT 'Row {$currentRow} updated';$endLineChar\";\r\n            // \t$content .= \"GO\";\r\n            // \t$content .= $endLineChar;\r\n            // }\r\n        }\r\n    });\r\n    if (rowDataStr.length && sqlSettings.statementType === 'insert') {\r\n        content += \"INSERT INTO [\" + sqlSettings.tableName + \"] (\" + colNamesStr + \")\\nVALUES\\n  (\" + rowDataStr.join('),\\n  (') + \");\\n\";\r\n    }\r\n    return content;\r\n};\r\n//# sourceMappingURL=SQL.generator.js.map","references":["/Users/benkeen/generatedata/client/types/exportTypes.d.ts","/Users/benkeen/generatedata/client/src/plugins/exportTypes/SQL/SQL.tsx"],"map":"{\"version\":3,\"file\":\"SQL.generator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/plugins/exportTypes/SQL/SQL.generator.ts\"],\"names\":[],\"mappings\":\"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\"}"}
