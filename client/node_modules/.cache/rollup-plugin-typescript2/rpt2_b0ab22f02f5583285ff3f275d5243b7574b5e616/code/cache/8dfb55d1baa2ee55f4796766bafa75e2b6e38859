{"code":"import { countryList } from '../../../_plugins';\r\nimport { getRandomArrayValue } from '~utils/randomUtils';\r\nvar countryRegions = {};\r\nexport var generate = function (data) {\r\n    var rowState = data.rowState, countryData = data.countryData, existingRowData = data.existingRowData;\r\n    var country;\r\n    if (rowState.source === 'row') {\r\n        var countryRow = existingRowData.find(function (_a) {\r\n            var id = _a.id;\r\n            return id === rowState.targetRowId;\r\n        });\r\n        country = countryRow.data.countryDataType;\r\n    }\r\n    else {\r\n        var list = rowState.source === 'any' ? countryList : rowState.selectedCountries;\r\n        country = getRandomArrayValue(list);\r\n    }\r\n    if (countryRegions[country]) {\r\n        return {\r\n            display: getRandomArrayValue(countryRegions[country].full),\r\n            countryDataType: country\r\n        };\r\n    }\r\n    else {\r\n        var selectedCountryData = countryData[country];\r\n        countryRegions[country] = {\r\n            full: selectedCountryData.regions.map(function (i) { return i.regionName; }),\r\n            short: selectedCountryData.regions.map(function (i) { return i.regionShort; })\r\n        };\r\n        return {\r\n            display: getRandomArrayValue(countryRegions[country].full),\r\n            countryDataType: country\r\n        };\r\n    }\r\n};\r\nvar utilsLoaded = false;\r\nvar onmessage = function (e) {\r\n    if (!utilsLoaded) {\r\n        importScripts(e.data.workerResources.workerUtils);\r\n        utilsLoaded = true;\r\n    }\r\n    postMessage(generate(e.data));\r\n};\r\n//# sourceMappingURL=Region.generator.js.map","references":["/Users/benkeen/generatedata/client/types/dataTypes.d.ts","/Users/benkeen/generatedata/client/src/_plugins.tsx","/Users/benkeen/generatedata/client/src/utils/randomUtils.ts","/Users/benkeen/generatedata/client/types/countries.d.ts"],"map":"{\"version\":3,\"file\":\"Region.generator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/plugins/dataTypes/Region/Region.generator.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAIzD,IAAM,cAAc,GAAQ,EAAE,CAAC;AAE/B,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,IAAsB;IACtC,IAAA,QAAQ,GAAmC,IAAI,SAAvC,EAAE,WAAW,GAAsB,IAAI,YAA1B,EAAE,eAAe,GAAK,IAAI,gBAAT,CAAU;IAExD,IAAI,OAAoB,CAAC;IAEzB,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK,EAAE;QAC9B,IAAM,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,UAAC,EAAW;gBAAT,EAAE,QAAA;YAAY,OAAA,EAAE,KAAK,QAAQ,CAAC,WAAW;QAA3B,CAA2B,CAAC,CAAC;QACtF,OAAO,GAAG,UAAW,CAAC,IAAI,CAAC,eAAe,CAAC;KAC3C;SAAM;QACN,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAClF,OAAO,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACpC;IAED,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE;QAC5B,OAAO;YACN,OAAO,EAAE,mBAAmB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;YAC1D,eAAe,EAAE,OAAO;SACxB,CAAC;KACF;SAAM;QACN,IAAM,mBAAmB,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QAEjD,cAAc,CAAC,OAAO,CAAC,GAAG;YACzB,IAAI,EAAE,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAS,IAAK,OAAA,CAAC,CAAC,UAAU,EAAZ,CAAY,CAAC;YAClE,KAAK,EAAE,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAS,IAAK,OAAA,CAAC,CAAC,WAAW,EAAb,CAAa,CAAC;SACpE,CAAC;QAEF,OAAO;YACN,OAAO,EAAE,mBAAmB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;YAC1D,eAAe,EAAE,OAAO;SACxB,CAAC;KACF;AACF,CAAC,CAAC;AAEF,IAAI,WAAW,GAAG,KAAK,CAAC;AAExB,IAAM,SAAS,GAAG,UAAC,CAAM;IACxB,IAAI,CAAC,WAAW,EAAE;QACjB,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAClD,WAAW,GAAG,IAAI,CAAC;KACnB;IAED,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC\"}"}
